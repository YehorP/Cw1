// <auto-generated />
using System;
using Kol2Example.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kol2Example.Migrations
{
    [DbContext(typeof(CodeFirstContext))]
    [Migration("20200612205232_PracownikZamowienieWyrobCukierniczyKlient")]
    partial class PracownikZamowienieWyrobCukierniczyKlient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kol2Example.Models.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdKlient");

                    b.ToTable("Klient");

                    b.HasData(
                        new
                        {
                            IdKlient = 1,
                            Imie = "Bill",
                            Nazwisko = "Wazowski"
                        },
                        new
                        {
                            IdKlient = 2,
                            Imie = "Alicja",
                            Nazwisko = "Piotrowska"
                        },
                        new
                        {
                            IdKlient = 3,
                            Imie = "Bob",
                            Nazwisko = "Kowelski"
                        });
                });

            modelBuilder.Entity("Kol2Example.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdPracownik");

                    b.ToTable("Pracownik");

                    b.HasData(
                        new
                        {
                            IdPracownik = 1,
                            Imie = "John",
                            Nazwisko = "Johnson"
                        },
                        new
                        {
                            IdPracownik = 2,
                            Imie = "Alice",
                            Nazwisko = "Johnson"
                        },
                        new
                        {
                            IdPracownik = 3,
                            Imie = "Sarash",
                            Nazwisko = "Stephenson"
                        });
                });

            modelBuilder.Entity("Kol2Example.Models.WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CenaZaSzt")
                        .HasColumnType("real");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdWyrobuCukierniczego");

                    b.ToTable("WyrobCukierniczy");

                    b.HasData(
                        new
                        {
                            IdWyrobuCukierniczego = 1,
                            CenaZaSzt = 30f,
                            Nazwa = "example1",
                            Typ = "Typ1"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 2,
                            CenaZaSzt = 10f,
                            Nazwa = "example2",
                            Typ = "Typ2"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 3,
                            CenaZaSzt = 20f,
                            Nazwa = "example3",
                            Typ = "Typ3"
                        });
                });

            modelBuilder.Entity("Kol2Example.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdZamowienia");

                    b.HasIndex("IdKlient");

                    b.HasIndex("IdPracownik");

                    b.ToTable("Zamowienie");

                    b.HasData(
                        new
                        {
                            IdZamowienia = 1,
                            DataPrzyjencia = new DateTime(2020, 6, 12, 22, 52, 31, 729, DateTimeKind.Local).AddTicks(1506),
                            DataRealizacji = new DateTime(2020, 7, 12, 22, 52, 31, 733, DateTimeKind.Local).AddTicks(1509),
                            IdKlient = 1,
                            IdPracownik = 1,
                            Uwagi = "ababababba"
                        },
                        new
                        {
                            IdZamowienia = 2,
                            DataPrzyjencia = new DateTime(2020, 6, 12, 22, 52, 31, 733, DateTimeKind.Local).AddTicks(1509),
                            DataRealizacji = new DateTime(2020, 8, 1, 22, 52, 31, 733, DateTimeKind.Local).AddTicks(1509),
                            IdKlient = 2,
                            IdPracownik = 2,
                            Uwagi = "hello2"
                        },
                        new
                        {
                            IdZamowienia = 3,
                            DataPrzyjencia = new DateTime(2020, 6, 12, 22, 52, 31, 733, DateTimeKind.Local).AddTicks(1509),
                            DataRealizacji = new DateTime(2020, 7, 22, 22, 52, 31, 733, DateTimeKind.Local).AddTicks(1509),
                            IdKlient = 3,
                            IdPracownik = 2,
                            Uwagi = "example3"
                        });
                });

            modelBuilder.Entity("Kol2Example.Models.ZamowienieWyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .HasColumnType("int");

                    b.Property<int>("IdZamowienia")
                        .HasColumnType("int");

                    b.Property<int>("Illosc")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdWyrobuCukierniczego", "IdZamowienia");

                    b.HasIndex("IdZamowienia");

                    b.ToTable("Zamowienie_WyrobCukierniczy");

                    b.HasData(
                        new
                        {
                            IdWyrobuCukierniczego = 1,
                            IdZamowienia = 1,
                            Illosc = 5,
                            Uwagi = "exampleUwagi1"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 2,
                            IdZamowienia = 2,
                            Illosc = 1,
                            Uwagi = "exampleUwagi2"
                        },
                        new
                        {
                            IdWyrobuCukierniczego = 2,
                            IdZamowienia = 3,
                            Illosc = 7,
                            Uwagi = "exampleUwagi3"
                        });
                });

            modelBuilder.Entity("Kol2Example.Models.Zamowienie", b =>
                {
                    b.HasOne("Kol2Example.Models.Klient", "Klient")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdKlient")
                        .HasConstraintName("Zamowienie_Klient")
                        .IsRequired();

                    b.HasOne("Kol2Example.Models.Pracownik", "Pracownik")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdPracownik")
                        .HasConstraintName("Zamowienie_Pracownik")
                        .IsRequired();
                });

            modelBuilder.Entity("Kol2Example.Models.ZamowienieWyrobCukierniczy", b =>
                {
                    b.HasOne("Kol2Example.Models.WyrobCukierniczy", "WyrobCukierniczy")
                        .WithMany("ZamowieniaWyrobyCukierniczie")
                        .HasForeignKey("IdWyrobuCukierniczego")
                        .HasConstraintName("ZamowienieWyrobCukierniczy_WyrobCukierniczy")
                        .IsRequired();

                    b.HasOne("Kol2Example.Models.Zamowienie", "Zamowienie")
                        .WithMany("ZamowieniaWyrobyCukierniczie")
                        .HasForeignKey("IdZamowienia")
                        .HasConstraintName("ZamowienieWyrobCukierniczy_Zamowienie")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
